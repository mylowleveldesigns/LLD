
         * S -> Single Responsibility Principle
         * O -> Open / Closed Principle
         * L -> Liskov Substitution Principle
         * I -> Interface Segmented Principle
         * D -> Dependency Inversion Principle




         Single Responsibility
         A class should have only 1 reason to change, or only 1 responsibility


         Open for Extension but closed for Modification
         https://www.youtube.com/watch?v=SodKv9n5Nro


         Liskov Substitution Principle
         If Class B is subtype of Class A, then we should be able to replace object of A with Object of B
         without breaking the behaviour of Program
         Subclass should extend the capability of a class, not narrow it down




         Interface Segmentd Principle
         Interfaces should be such that, classes should not implement unnecessary functions theat they do not need.




         Dependency Inversion Principle
         Classes should depend on interfaces, rather than concrete classes
